# class-sich.awkf
#
# md series 2
#
# class-sich.awkf defines the 'class' of a molecule
# given its empirical formula.
#
#
# (c) 1999 cameron abrams
#
# Class Number		Molecules in Class
# ============		==================
# 	 1		H
#	 2		H2
#	 3		C
#	 4		CH
#	 5		CH2
#	 6		CH3
#	 7 		CH4
#	 8 		Cm,      1<m<5, "bare C-oligomers"
#	 9		CmHx,    1<m<5, "hydrogenated C-oligomers"
#	10		Cn,      n>4,   "bare C-polymers"
#	11		CnHx,    n>4,   "hydrogenated C-polymers"
# 	12		Si
#	13		Sim,     1<m<5, "bare Si-oligomers"
#	14		Sin,     n>4,   "bare Si-polymers"
#	15		SiH
#	16		SiH2
#	17		SiH3
#	18		SiH4
#	19		SiH5
#	20		SimHx,   1<m<5, "hydrogenated Si-oligomers"
#	21		SinHx,   n>4,   "hydrogenated Si-polymers"
#	22		SiCm,    1<m<5, "bare Si-1 C-oligomers"
#	23		SiCn,    n>4,   "bare Si-1 C-polymers"
#	24		SimCx,   1<m<5, "bare C-x Si-oligomers"
#	25		SinCx,   n>4,   "bare C-x Si-polymers"
#	26		SiCmHx,  1<m<5, "hydrogenated Si-1 C-oligomers"
#	27		SiCnHx,  n>4,   "hydrogenated Si-1 C-polymers"
#	28		SimCxHy, 1<m<5, "large molecule, low Si"
#	29		SinCxHy, n>4,   "large molecule, high Si"
#  	30		H3, "hydrogen trimer" (unstable->H1+H2)
#	31		H4, "hydrogen tetramer" (unstable->2*H2)
#	99		other

function init_classnames (classnames)
{
    classnames[1] = "H";
    classnames[2] = "H2";
    classnames[3] = "C";
    classnames[4] = "CH";
    classnames[5] = "CH2";
    classnames[6] = "CH3";
    classnames[7] = "CH4";
    classnames[8] = "Cm";
    classnames[9] = "CmHx";
    classnames[10] = "Cn";
    classnames[11] = "CnHx";
    classnames[12] = "Si";
    classnames[13] = "Sim";
    classnames[14] = "Sin";
    classnames[15] = "SiH";
    classnames[16] = "SiH2";
    classnames[17] = "SiH3";
    classnames[18] = "SiH4";
    classnames[19] = "SiH5";
    classnames[20] = "SimHx";
    classnames[21] = "SinHx";
    classnames[22] = "SiCm";
    classnames[23] = "SiCn";
    classnames[24] = "SimCx";
    classnames[25] = "SinCx";
    classnames[26] = "SiCmHx";
    classnames[27] = "SiCnHx";
    classnames[28] = "SimCxHy";
    classnames[29] = "SinCxHy";
    classnames[30] = "H3";
    classnames[31] = "H4";
    classnames[32] = "other";

    return;
}
function molclass (nf,nc,nsi) {  
#   printf("dbg-000 (mc) nf(%i) nc(%i) nsi(%i)\n",nf,nc,nsi); 
   class=0;
   if (nsi==0)
   {
      if (nc==0)
      {
	 # H,H2,Hn classes are assigned
         if (nf==1) class=1;
         else if (nf==2) class=2;
         else if (nf==3) class=30;
         else if (nf==4) class=31;
         else class=99;
      }
      else
      {
         if (nc==1)
         {
           # C, CH, CH2, CH3, CH4 classes are assigned
           if (nf==0) class=3;
           else if (nf==1) class=4;
           else if (nf==2) class=5;
           else if (nf==3) class=6;
           else if (nf==4) class=7;
           else class=99;
 	 }
	 else
	 {
	   if (nc<5)
           {
 	      # (C2, C3, C4) class, (C2Hx,C3Hx,C4Hx) class
              if (nf==0) class=8;
              else class=9;
	   }
	   else
           {
	      # (Cn,n>4) class, (CnHx,n>4) class
              if (nf==0) class=10;
              else class=11;
           }
	 }
      }
   }
   else if (nsi==1)
   {
      if (nc==0)
      {
	if (nf==0) class=12;
	else if (nf==1) class=15;
	else if (nf==2) class=16;
	else if (nf==3) class=17;
	else if (nf==4) class=18;
	else if (nf==5) class=19;
	else class=99;
      }
      else if (nc<5)
      {
	if (nf==0) class=22;
	else class=26;
      }
      else
      {
	if (nf==0) class=23;
	else class=27;
      }
   }
   else
   {
      if (nc==0)
      {
	if (nf==0)
	{
	  if (nsi<5) class=13;
	  else class=14;
	}
	else 
	{
	  if (nsi<5) class=20;
	  else class=21;
	}
      }
      else
      {
	if (nsi<5)
	{
	  if (nf==0) class=24;
	  else class=28;
        }
        else
        {
	  if (nf==0) class=25;
	  else class=29;
        }
      }
   }
   return class;
}

